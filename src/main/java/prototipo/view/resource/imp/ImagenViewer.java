/**
 *   Copyright 2012-2013 Nekorp
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License
 */
package prototipo.view.resource.imp;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import prototipo.servicio.imp.ImageServiceImp;

/**
 *
 *
 */
public class ImagenViewer extends javax.swing.JPanel {

    private BufferedImage originalImage;

    /**
     * Creates new form ImagenViewer
     */
    public ImagenViewer(BufferedImage image) {
        initComponents();
        this.originalImage = image;
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        //g.drawImage(originalImage, 0, 0, null);
        Graphics2D g2 = (Graphics2D)g;
        Dimension dImage = new Dimension(this.originalImage.getWidth(), this.originalImage.getHeight());
        Dimension myDimension = this.getSize();
        if (dImage.width > myDimension.width || dImage.height > myDimension.height) {
            Dimension newDimension = ImageServiceImp.getScaledDimension(dImage, this.getSize());
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                            RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            //originalImage.createGraphics();
            g2.drawImage(originalImage, 0, 0, (int)newDimension.getWidth(), (int)newDimension.getHeight(), null);
        } else {
            g2.drawImage(originalImage, 0, 0, null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
